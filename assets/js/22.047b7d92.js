(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{401:function(n,s,a){"use strict";a.r(s);var e=a(42),t=Object(e.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("p",[n._v("掘金是一个帮助开发者成长的社区，是给开发者用的 Hacker News，给设计师用的 Designer News，和给产品经理用的 Medium。\n本文主要对以下技术要点进行分析：")]),n._v(" "),a("p",[n._v("编辑器\n自定义组件\n拖拽\n删除组件、调整图层层级\n放大缩小\n撤消、重做\n组件属性设置\n吸附\n预览、保存代码\n绑定事件\n绑定动画\n导入 PSD\n手机模式\n为了让本文更加容易理解，我将以上技术要点结合在一起写了一个可视化拖拽组件库 DEMO：")]),n._v(" "),a("p",[n._v("github 项目地址\n在线预览\n建议结合源码一起阅读，效果更好（这个 DEMO 使用的是 Vue 技术栈）。")]),n._v(" "),a("ol",[a("li",[n._v("编辑器\n先来看一下页面的整体结构。")])]),n._v(" "),a("p",[n._v("这一节要讲的编辑器其实就是中间的画布。它的作用是：当从左边组件列表拖拽出一个组件放到画布中时，画布要把这个组件渲染出来。")]),n._v(" "),a("p",[n._v("这个编辑器的实现思路是：")]),n._v(" "),a("p",[n._v("用一个数组 componentData 维护编辑器中的数据。\n把组件拖拽到画布中时，使用 push() 方法将新的组件数据添加到 componentData。\n编辑器使用 v-for 指令遍历 componentData，将每个组件逐个渲染到画布（也可以使用 JSX 语法结合 render() 方法代替）。\n编辑器渲染的核心代码如下所示：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('<component \n  v-for="item in componentData"\n  :key="item.id"\n  :is="item.component"\n  :style="item.style"\n  :propValue="item.propValue"\n/>\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br")])]),a("p",[n._v("复制代码\n每个组件数据大概是这样：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("{\n    component: 'v-text', \n    label: '文字', \n    propValue: '文字', \n    icon: 'el-icon-edit', \n    animations: [], \n    events: {}, \n    style: { \n        width: 200,\n        height: 33,\n        fontSize: 14,\n        fontWeight: 500,\n        lineHeight: '',\n        letterSpacing: 0,\n        textAlign: '',\n        color: '',\n    },\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br")])]),a("p",[n._v("复制代码\n在遍历 componentData 组件数据时，主要靠 is 属性来识别出真正要渲染的是哪个组件。")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("例如要渲染的组件数据是 { component: 'v-text' }，则 <component :is=\"item.component\" /> 会被转换为 <v-text />。当然，你这个组件也要提前注册到 Vue 中。\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br")])]),a("p",[n._v("如果你想了解更多 is 属性的资料，请查看官方文档。")]),n._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[n._v("自定义组件\n原则上使用第三方组件也是可以的，但建议你最好封装一下。不管是第三方组件还是自定义组件，每个组件所需的属性可能都不一样，所以每个组件数据可以暴露出一个属性 propValue 用于传递值。")])]),n._v(" "),a("p",[n._v("例如 a 组件只需要一个属性，你的 propValue 可以这样写：propValue: 'aaa'。如果需要多个属性，propValue 则可以是一个对象：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("propValue: {\n  a: 1,\n  b: 'text'\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br")])]),a("p",[n._v("复制代码\n在这个 DEMO 组件库中我定义了三个组件。")]),n._v(" "),a("p",[n._v("图片组件 Picture：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('<template>\n    <div>\n        <img :src="propValue">\n    </div>\n</template>\n\n<script>\nexport default {\n    props: {\n        propValue: {\n            type: String,\n            require: true,\n        },\n    },\n}\n<\/script>\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br")])]),a("p",[n._v("复制代码\n按钮组件 VButton:")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("<template>\n    <button>{{ propValue }}</button>\n</template>\n\n<script>\nexport default {\n    props: {\n        propValue: {\n            type: String,\n            default: '',\n        },\n    },\n}\n<\/script>\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br")])]),a("p",[n._v("复制代码\n文本组件 VText:")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('<template>\n    <textarea \n        v-if="editMode == \'edit\'"\n        :value="propValue"\n       \n        @input="handleInput"\n        ref="v-text"\n    ></textarea>\n    <div v-else>\n        <div v-for="(text, index) in propValue.split(\'\\n\')" :key="index">{{ text }}</div>\n    </div>\n</template>\n\n<script>\nimport { mapState } from \'vuex\'\n\nexport default {\n    props: {\n        propValue: {\n            type: String,\n        },\n        element: {\n            type: Object,\n        },\n    },\n    computed: mapState([\n        \'editMode\',\n    ]),\n    methods: {\n        handleInput(e) {\n            this.$emit(\'input\', this.element, e.target.value)\n        },\n    },\n}\n<\/script>\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br")])]),a("p",[n._v("复制代码\n3. 拖拽\n从组件列表到画布\n一个元素如果要设为可拖拽，必须给它添加一个 draggable 属性。另外，在将组件列表中的组件拖拽到画布中，还有两个事件是起到关键作用的：")]),n._v(" "),a("p",[n._v("dragstart 事件，在拖拽刚开始时触发。它主要用于将拖拽的组件信息传递给画布。\ndrop 事件，在拖拽结束时触发。主要用于接收拖拽的组件信息。\n先来看一下左侧组件列表的代码：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('<div @dragstart="handleDragStart">\n    <div v-for="(item, index) in componentList" :key="index" draggable :data-index="index">\n        <i :class="item.icon"></i>\n        <span>{{ item.label }}</span>\n    </div>\n</div>\n复制代码\nhandleDragStart(e) {\n    e.dataTransfer.setData(\'index\', e.target.dataset.index)\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br")])]),a("p",[n._v("复制代码\n可以看到给列表中的每一个组件都设置了 draggable 属性。另外，在触发 dragstart 事件时，使用 dataTransfer.setData() 传输数据。再来看一下接收数据的代码：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('<div @drop="handleDrop" @dragover="handleDragOver" @click="deselectCurComponent">\n    <Editor />\n</div>\n复制代码\nhandleDrop(e) {\n    e.preventDefault()\n    e.stopPropagation()\n    const component = deepCopy(componentList[e.dataTransfer.getData(\'index\')])\n    this.$store.commit(\'addComponent\', component)\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br")])]),a("p",[n._v("复制代码\n触发 drop 事件时，使用 dataTransfer.getData() 接收传输过来的索引数据，然后根据索引找到对应的组件数据，再添加到画布，从而渲染组件。")]),n._v(" "),a("p",[n._v("组件在画布中移动\n首先需要将画布设为相对定位 position: relative，然后将每个组件设为绝对定位 position: absolute。除了这一点外，还要通过监听三个事件来进行移动：")]),n._v(" "),a("p",[n._v("mousedown 事件，在组件上按下鼠标时，记录组件当前的位置，即 xy 坐标（为了方便讲解，这里使用的坐标轴，实际上 xy 对应的是 css 中的 left 和 top。\nmousemove 事件，每次鼠标移动时，都用当前最新的 xy 坐标减去最开始的 xy 坐标，从而计算出移动距离，再改变组件位置。\nmouseup 事件，鼠标抬起时结束移动。")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("handleMouseDown(e) {\n    e.stopPropagation()\n    this.$store.commit('setCurComponent', { component: this.element, zIndex: this.zIndex })\n\n    const pos = { ...this.defaultStyle }\n    const startY = e.clientY\n    const startX = e.clientX\n    \n    const startTop = Number(pos.top)\n    const startLeft = Number(pos.left)\n\n    const move = (moveEvent) => {\n        const currX = moveEvent.clientX\n        const currY = moveEvent.clientY\n        pos.top = currY - startY + startTop\n        pos.left = currX - startX + startLeft\n        \n        this.$store.commit('setShapeStyle', pos)\n    }\n\n    const up = () => {\n        document.removeEventListener('mousemove', move)\n        document.removeEventListener('mouseup', up)\n    }\n\n    document.addEventListener('mousemove', move)\n    document.addEventListener('mouseup', up)\n}\n复制代码\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br")])]),a("ol",{attrs:{start:"4"}},[a("li",[n._v("删除组件、调整图层层级\n改变图层层级\n由于拖拽组件到画布中是有先后顺序的，所以可以按照数据顺序来分配图层层级。")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('例如画布新增了五个组件 abcde，那它们在画布数据中的顺序为 [a, b, c, d, e]，图层层级和索引一一对应，即它们的 z-index 属性值是 01234（后来居上）。用代码表示如下：\n\n<div v-for="(item, index) in componentData" :zIndex="index"></div>\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br")])]),a("p",[n._v("复制代码\n如果不了解 z-index 属性的，请看一下 MDN 文档。")]),n._v(" "),a("p",[n._v("理解了这一点之后，改变图层层级就很容易做到了。改变图层层级，即是改变组件数据在 componentData 数组中的顺序。例如有 [a, b, c] 三个组件，它们的图层层级从低到高顺序为 abc（索引越大，层级越高）。")]),n._v(" "),a("p",[n._v("如果要将 b 组件上移，只需将它和 c 调换顺序即可：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("const temp = componentData[1]\ncomponentData[1] = componentData[2]\ncomponentData[2] = temp\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br")])]),a("p",[n._v("复制代码\n同理，置顶置底也是一样，例如我要将 a 组件置顶，只需将 a 和最后一个组件调换顺序即可：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("const temp = componentData[0]\ncomponentData[0] = componentData[componentData.lenght - 1]\ncomponentData[componentData.lenght - 1] = temp\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br")])]),a("p",[n._v("复制代码")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("删除组件\n删除组件非常简单，一行代码搞定：componentData.splice(index, 1)。\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br")])]),a("ol",{attrs:{start:"5"}},[a("li",[n._v("放大缩小\n细心的网友可能会发现，点击画布上的组件时，组件上会出现 8 个小圆点。这 8 个小圆点就是用来放大缩小用的。实现原理如下：")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('1. 在每个组件外面包一层 Shape 组件，Shape 组件里包含 8 个小圆点和一个 <slot> 插槽，用于放置组件。\n<Shape v-for="(item, index) in componentData"\n    :defaultStyle="item.style"\n    :style="getShapeStyle(item.style, index)"\n    :key="item.id"\n    :active="item === curComponent"\n    :element="item"\n    :zIndex="index"\n>\n    <component\n       \n        :is="item.component"\n        :style="getComponentStyle(item.style)"\n        :propValue="item.propValue"\n    />\n</Shape>\n复制代码\nShape 组件内部结构：\n\n<template>\n    <div :class="{ active: this.active }" @click="selectCurComponent" @mousedown="handleMouseDown"\n    @contextmenu="handleContextMenu">\n        <div\n           \n            v-for="(item, index) in (active? pointList : [])"\n            @mousedown="handleMouseDownOnPoint(item)"\n            :key="index"\n            :style="getPointStyle(item)">\n        </div>\n        <slot></slot>\n    </div>\n</template>\n复制代码\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[a("p",[n._v('点击组件时，将 8 个小圆点显示出来。\n起作用的是这行代码 :active="item === curComponent"。')])]),n._v(" "),a("li",[a("p",[n._v("计算每个小圆点的位置。\n先来看一下计算小圆点位置的代码：")])])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("const pointList = ['t', 'r', 'b', 'l', 'lt', 'rt', 'lb', 'rb']\n\ngetPointStyle(point) {\n    const { width, height } = this.defaultStyle\n    const hasT = /t/.test(point)\n    const hasB = /b/.test(point)\n    const hasL = /l/.test(point)\n    const hasR = /r/.test(point)\n    let newLeft = 0\n    let newTop = 0\n\n    \n    if (point.length === 2) {\n        newLeft = hasL? 0 : width\n        newTop = hasT? 0 : height\n    } else {\n        \n        if (hasT || hasB) {\n            newLeft = width / 2\n            newTop = hasT? 0 : height\n        }\n\n        \n        if (hasL || hasR) {\n            newLeft = hasL? 0 : width\n            newTop = Math.floor(height / 2)\n        }\n    }\n\n    const style = {\n        marginLeft: hasR? '-4px' : '-3px',\n        marginTop: '-3px',\n        left: `${newLeft}px`,\n        top: `${newTop}px`,\n        cursor: point.split('').reverse().map(m => this.directionKey[m]).join('') + '-resize',\n    }\n\n    return style\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br")])]),a("p",[n._v("复制代码\n计算小圆点的位置需要获取一些信息：")]),n._v(" "),a("p",[n._v("组件的高度 height、宽度 width\n注意，小圆点也是绝对定位的，相对于 Shape 组件。所以有四个小圆点的位置很好确定：")]),n._v(" "),a("p",[n._v("左上角的小圆点，坐标 left: 0, top: 0\n右上角的小圆点，坐标 left: width, top: 0\n左下角的小圆点，坐标 left: 0, top: height\n右下角的小圆点，坐标 left: width, top: height")]),n._v(" "),a("p",[n._v("另外的四个小圆点需要通过计算间接算出来。例如左边中间的小圆点，计算公式为 left: 0, top: height / 2，其他小圆点同理。")]),n._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[n._v("点击小圆点时，可以进行放大缩小操作。")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("handleMouseDownOnPoint(point) {\n    const downEvent = window.event\n    downEvent.stopPropagation()\n    downEvent.preventDefault()\n\n    const pos = { ...this.defaultStyle }\n    const height = Number(pos.height)\n    const width = Number(pos.width)\n    const top = Number(pos.top)\n    const left = Number(pos.left)\n    const startX = downEvent.clientX\n    const startY = downEvent.clientY\n\n    \n    let needSave = false\n    const move = (moveEvent) => {\n        needSave = true\n        const currX = moveEvent.clientX\n        const currY = moveEvent.clientY\n        const disY = currY - startY\n        const disX = currX - startX\n        const hasT = /t/.test(point)\n        const hasB = /b/.test(point)\n        const hasL = /l/.test(point)\n        const hasR = /r/.test(point)\n        const newHeight = height + (hasT? -disY : hasB? disY : 0)\n        const newWidth = width + (hasL? -disX : hasR? disX : 0)\n        pos.height = newHeight > 0? newHeight : 0\n        pos.width = newWidth > 0? newWidth : 0\n        pos.left = left + (hasL? disX : 0)\n        pos.top = top + (hasT? disY : 0)\n        this.$store.commit('setShapeStyle', pos)\n    }\n\n    const up = () => {\n        document.removeEventListener('mousemove', move)\n        document.removeEventListener('mouseup', up)\n        needSave && this.$store.commit('recordSnapshot')\n    }\n\n    document.addEventListener('mousemove', move)\n    document.addEventListener('mouseup', up)\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br")])]),a("p",[n._v("复制代码\n它的原理是这样的：")]),n._v(" "),a("p",[n._v("点击小圆点时，记录点击的坐标 xy。\n假设我们现在向下拖动，那么 y 坐标就会增大。\n用新的 y 坐标减去原来的 y 坐标，就可以知道在纵轴方向的移动距离是多少。\n最后再将移动距离加上原来组件的高度，就可以得出新的组件高度。\n如果是正数，说明是往下拉，组件的高度在增加。如果是负数，说明是往上拉，组件的高度在减少。")]),n._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[n._v("撤消、重做\n撤销重做的实现原理其实挺简单的，先看一下代码：")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("snapshotData: [], \nsnapshotIndex: -1, \n        \nundo(state) {\n    if (state.snapshotIndex >= 0) {\n        state.snapshotIndex--\n        store.commit('setComponentData', deepCopy(state.snapshotData[state.snapshotIndex]))\n    }\n},\n\nredo(state) {\n    if (state.snapshotIndex < state.snapshotData.length - 1) {\n        state.snapshotIndex++\n        store.commit('setComponentData', deepCopy(state.snapshotData[state.snapshotIndex]))\n    }\n},\n\nsetComponentData(state, componentData = []) {\n    Vue.set(state, 'componentData', componentData)\n},\n\nrecordSnapshot(state) {\n    \n    state.snapshotData[++state.snapshotIndex] = deepCopy(state.componentData)\n    \n    if (state.snapshotIndex < state.snapshotData.length - 1) {\n        state.snapshotData = state.snapshotData.slice(0, state.snapshotIndex + 1)\n    }\n},\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br")])]),a("p",[n._v("复制代码\n用一个数组来保存编辑器的快照数据。保存快照就是不停地执行 push() 操作，将当前的编辑器数据推入 snapshotData 数组，并增加快照索引 snapshotIndex。目前以下几个动作会触发保存快照操作：")]),n._v(" "),a("p",[n._v("新增组件\n删除组件\n改变图层层级\n拖动组件结束时\n...")]),n._v(" "),a("p",[n._v("撤销\n假设现在 snapshotData 保存了 4 个快照。即 [a, b, c, d]，对应的快照索引为 3。如果这时进行了撤销操作，我们需要将快照索引减 1，然后将对应的快照数据赋值给画布。")]),n._v(" "),a("p",[n._v("例如当前画布数据是 d，进行撤销后，索引 -1，现在画布的数据是 c。")]),n._v(" "),a("p",[n._v("重做\n明白了撤销，那重做就很好理解了，就是将快照索引加 1，然后将对应的快照数据赋值给画布。")]),n._v(" "),a("p",[n._v("不过还有一点要注意，就是在撤销操作中进行了新的操作，要怎么办呢？有两种解决方案：")]),n._v(" "),a("p",[n._v("新操作替换当前快照索引后面所有的数据。还是用刚才的数据 [a, b, c, d] 举例，假设现在进行了两次撤销操作，快照索引变为 1，对应的快照数据为 b，如果这时进行了新的操作，对应的快照数据为 e。那 e 会把 cd 顶掉，现在的快照数据为 [a, b, e]。\n不顶掉数据，在原来的快照中新增一条记录。用刚才的例子举例，e 不会把 cd 顶掉，而是在 cd 之前插入，即快照数据变为 [a, b, e, c, d]。\n我采用的是第一种方案。")]),n._v(" "),a("ol",{attrs:{start:"7"}},[a("li",[n._v("吸附\n什么是吸附？就是在拖拽组件时，如果它和另一个组件的距离比较接近，就会自动吸附在一起。")])]),n._v(" "),a("p",[n._v("吸附的代码大概在 300 行左右，建议自己打开源码文件看（文件路径：src\\components\\Editor\\MarkLine.vue）。这里不贴代码了，主要说说原理是怎么实现的。")]),n._v(" "),a("p",[n._v("标线\n在页面上创建 6 条线，分别是三横三竖。这 6 条线的作用是对齐，它们什么时候会出现呢？")]),n._v(" "),a("p",[n._v("上下方向的两个组件左边、中间、右边对齐时会出现竖线\n左右方向的两个组件上边、中间、下边对齐时会出现横线\n具体的计算公式主要是根据每个组件的 xy 坐标和宽度高度进行计算的。例如要判断 ab 两个组件的左边是否对齐，则要知道它们每个组件的 x 坐标；如果要知道它们右边是否对齐，除了要知道 x 坐标，还要知道它们各自的宽度。")]),n._v(" "),a("p",[n._v("a.x == b.x")]),n._v(" "),a("p",[n._v("a.x + a.width == b.x + b.width\n复制代码\n在对齐的时候，显示标线。")]),n._v(" "),a("p",[n._v("另外还要判断 ab 两个组件是否 “足够” 近。如果足够近，就吸附在一起。是否足够近要靠一个变量来判断：")]),n._v(" "),a("p",[n._v("diff: 3,\n复制代码\n小于等于 diff 像素则自动吸附。")]),n._v(" "),a("p",[n._v("吸附\n吸附效果是怎么实现的呢？")]),n._v(" "),a("p",[n._v("假设现在有 ab 组件，a 组件坐标 xy 都是 0，宽高都是 100。现在假设 a 组件不动，我们正在拖拽 b 组件。当把 b 组件拖到坐标为 x: 0, y: 103 时，由于 103 - 100 <= 3(diff)，所以可以判定它们已经接近得足够近。这时需要手动将 b 组件的 y 坐标值设为 100，这样就将 ab 组件吸附在一起了。")]),n._v(" "),a("p",[n._v("优化\n在拖拽时如果 6 条标线都显示出来会不太美观。所以我们可以做一下优化，在纵横方向上最多只同时显示一条线。实现原理如下：")]),n._v(" "),a("p",[n._v("a 组件在左边不动，我们拖着 b 组件往 a 组件靠近。\n这时它们最先对齐的是 a 的右边和 b 的左边，所以只需要一条线就够了。\n如果 ab 组件已经靠近，并且 b 组件继续往左边移动，这时就要判断它们俩的中间是否对齐。\nb 组件继续拖动，这时需要判断 a 组件的左边和 b 组件的右边是否对齐，也是只需要一条线。\n可以发现，关键的地方是我们要知道两个组件的方向。即 ab 两个组件靠近，我们要知道到底 b 是在 a 的左边还是右边。")]),n._v(" "),a("p",[n._v("这一点可以通过鼠标移动事件来判断，之前在讲解拖拽的时候说过，mousedown 事件触发时会记录起点坐标。所以每次触发 mousemove 事件时，用当前坐标减去原来的坐标，就可以判断组件方向。例如 x 方向上，如果 b.x - a.x 的差值为正，说明是 b 在 a 右边，否则为左边。")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("eventBus.$emit('move', this.$el, currY - startY > 0, currX - startX > 0)\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br")])]),a("p",[n._v("复制代码")]),n._v(" "),a("ol",{attrs:{start:"8"}},[a("li",[n._v("组件属性设置\n每个组件都有一些通用属性和独有的属性，我们需要提供一个能显示和修改属性的地方。")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("{\n    component: 'v-text', \n    label: '文字', \n    propValue: '文字', \n    icon: 'el-icon-edit', \n    animations: [], \n    events: {}, \n    style: { \n        width: 200,\n        height: 33,\n        fontSize: 14,\n        fontWeight: 500,\n        lineHeight: '',\n        letterSpacing: 0,\n        textAlign: '',\n        color: '',\n    },\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br")])]),a("p",[n._v("复制代码")]),n._v(" "),a("p",[n._v("我定义了一个 AttrList 组件，用于显示每个组件的属性。")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('<template>\n    <div>\n        <el-form>\n            <el-form-item v-for="(key, index) in styleKeys" :key="index" :label="map[key]">\n                <el-color-picker v-if="key == \'borderColor\'" v-model="curComponent.style[key]"></el-color-picker>\n                <el-color-picker v-else-if="key == \'color\'" v-model="curComponent.style[key]"></el-color-picker>\n                <el-color-picker v-else-if="key == \'backgroundColor\'" v-model="curComponent.style[key]"></el-color-picker>\n                <el-select v-else-if="key == \'textAlign\'" v-model="curComponent.style[key]">\n                    <el-option\n                        v-for="item in options"\n                        :key="item.value"\n                        :label="item.label"\n                        :value="item.value"\n                    ></el-option>\n                </el-select>\n                <el-input type="number" v-else v-model="curComponent.style[key]" />\n            </el-form-item>\n            <el-form-item label="内容" v-if="curComponent && curComponent.propValue && !excludes.includes(curComponent.component)">\n                <el-input type="textarea" v-model="curComponent.propValue" />\n            </el-form-item>\n        </el-form>\n    </div>\n</template>\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br")])]),a("p",[n._v("复制代码\n代码逻辑很简单，就是遍历组件的 style 对象，将每一个属性遍历出来。并且需要根据具体的属性用不同的组件显示出来，例如颜色属性，需要用颜色选择器显示；数值类的属性需要用 type=number 的 input 组件显示等等。")]),n._v(" "),a("p",[n._v("为了方便用户修改属性值，我使用 v-model 将组件和值绑定在一起。")]),n._v(" "),a("ol",{attrs:{start:"9"}},[a("li",[n._v("预览、保存代码\n预览和编辑的渲染原理是一样的，区别是不需要编辑功能。所以只需要将原先渲染组件的代码稍微改一下就可以了。")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('<Shape v-for="(item, index) in componentData"\n    :defaultStyle="item.style"\n    :style="getShapeStyle(item.style, index)"\n    :key="item.id"\n    :active="item === curComponent"\n    :element="item"\n    :zIndex="index"\n>\n    <component\n       \n        :is="item.component"\n        :style="getComponentStyle(item.style)"\n        :propValue="item.propValue"\n    />\n</Shape>\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br")])]),a("p",[n._v("复制代码\n经过刚才的介绍，我们知道 Shape 组件具备了拖拽、放大缩小的功能。现在只需要将 Shape 组件去掉，外面改成套一个普通的 DIV 就可以了（其实不用这个 DIV 也行，但为了绑定事件这个功能，所以需要加上）。")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('<div v-for="(item, index) in componentData" :key="item.id">\n    <component\n       \n        :is="item.component"\n        :style="getComponentStyle(item.style)"\n        :propValue="item.propValue"\n    />\n</div>\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br")])]),a("p",[n._v("复制代码\n保存代码的功能也特别简单，只需要保存画布上的数据 componentData 即可。保存有两种选择：")]),n._v(" "),a("p",[n._v("保存到服务器\n本地保存\n在 DEMO 上我使用的 localStorage 保存在本地。")]),n._v(" "),a("ol",{attrs:{start:"10"}},[a("li",[n._v("绑定事件\n每个组件有一个 events 对象，用于存储绑定的事件。目前我只定义了两个事件：")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("alert 事件\nredirect 事件\nconst events = {\n    redirect(url) {\n        if (url) {\n            window.location.href = url\n        }\n    },\n\n    alert(msg) {\n        if (msg) {\n            alert(msg)\n        }\n    },\n}\n\nconst mixins = {\n    methods: events,\n}\n\nconst eventList = [\n    {\n        key: 'redirect',\n        label: '跳转事件',\n        event: events.redirect,\n        param: '',\n    },\n    {\n        key: 'alert',\n        label: 'alert 事件',\n        event: events.alert,\n        param: '',\n    },\n]\n\nexport {\n    mixins,\n    events,\n    eventList,\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br")])]),a("p",[n._v("复制代码\n不过不能在编辑的时候触发，可以在预览的时候触发。")]),n._v(" "),a("p",[n._v("添加事件\n通过 v-for 指令将事件列表渲染出来：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('<el-tabs v-model="eventActiveName">\n    <el-tab-pane v-for="item in eventList" :key="item.key" :label="item.label" :name="item.key">\n        <el-input v-if="item.key == \'redirect\'" v-model="item.param" type="textarea" placeholder="请输入完整的 URL" />\n        <el-input v-if="item.key == \'alert\'" v-model="item.param" type="textarea" placeholder="请输入要 alert 的内容" />\n        <el-button @click="addEvent(item.key, item.param)">确定</el-button>\n    </el-tab-pane>\n</el-tabs>\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br")])]),a("p",[n._v("复制代码\n选中事件时将事件添加到组件的 events 对象。")]),n._v(" "),a("p",[n._v("触发事件\n预览或真正渲染页面时，也需要在每个组件外面套一层 DIV，这样就可以在 DIV 上绑定一个点击事件，点击时触发我们刚才添加的事件。")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('<template>\n    <div @click="handleClick">\n        <component\n           \n            :is="config.component"\n            :style="getStyle(config.style)"\n            :propValue="config.propValue"\n        />\n    </div>\n</template>\n复制代码\nhandleClick() {\n    const events = this.config.events\n    \n    Object.keys(events).forEach(event => {\n        this[event](events[event])\n    })\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br")])]),a("p",[n._v("复制代码\n11. 绑定动画\n动画和事件的原理是一样的，先将所有的动画通过 v-for 指令渲染出来，然后点击动画将对应的动画添加到组件的 animations 数组里。同事件一样，执行的时候也是遍历组件所有的动画并执行。")]),n._v(" "),a("p",[n._v("为了方便，我们使用了 animate.css 动画库。")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("import '@/styles/animate.css'\n复制代码\n现在我们提前定义好所有的动画数据：\n\nexport default [\n    {\n        label: '进入',\n        children: [\n            { label: '渐显', value: 'fadeIn' },\n            { label: '向右进入', value: 'fadeInLeft' },\n            { label: '向左进入', value: 'fadeInRight' },\n            { label: '向上进入', value: 'fadeInUp' },\n            { label: '向下进入', value: 'fadeInDown' },\n            { label: '向右长距进入', value: 'fadeInLeftBig' },\n            { label: '向左长距进入', value: 'fadeInRightBig' },\n            { label: '向上长距进入', value: 'fadeInUpBig' },\n            { label: '向下长距进入', value: 'fadeInDownBig' },\n            { label: '旋转进入', value: 'rotateIn' },\n            { label: '左顺时针旋转', value: 'rotateInDownLeft' },\n            { label: '右逆时针旋转', value: 'rotateInDownRight' },\n            { label: '左逆时针旋转', value: 'rotateInUpLeft' },\n            { label: '右逆时针旋转', value: 'rotateInUpRight' },\n            { label: '弹入', value: 'bounceIn' },\n            { label: '向右弹入', value: 'bounceInLeft' },\n            { label: '向左弹入', value: 'bounceInRight' },\n            { label: '向上弹入', value: 'bounceInUp' },\n            { label: '向下弹入', value: 'bounceInDown' },\n            { label: '光速从右进入', value: 'lightSpeedInRight' },\n            { label: '光速从左进入', value: 'lightSpeedInLeft' },\n            { label: '光速从右退出', value: 'lightSpeedOutRight' },\n            { label: '光速从左退出', value: 'lightSpeedOutLeft' },\n            { label: 'Y轴旋转', value: 'flip' },\n            { label: '中心X轴旋转', value: 'flipInX' },\n            { label: '中心Y轴旋转', value: 'flipInY' },\n            { label: '左长半径旋转', value: 'rollIn' },\n            { label: '由小变大进入', value: 'zoomIn' },\n            { label: '左变大进入', value: 'zoomInLeft' },\n            { label: '右变大进入', value: 'zoomInRight' },\n            { label: '向上变大进入', value: 'zoomInUp' },\n            { label: '向下变大进入', value: 'zoomInDown' },\n            { label: '向右滑动展开', value: 'slideInLeft' },\n            { label: '向左滑动展开', value: 'slideInRight' },\n            { label: '向上滑动展开', value: 'slideInUp' },\n            { label: '向下滑动展开', value: 'slideInDown' },\n        ],\n    },\n    {\n        label: '强调',\n        children: [\n            { label: '弹跳', value: 'bounce' },\n            { label: '闪烁', value: 'flash' },\n            { label: '放大缩小', value: 'pulse' },\n            { label: '放大缩小弹簧', value: 'rubberBand' },\n            { label: '左右晃动', value: 'headShake' },\n            { label: '左右扇形摇摆', value: 'swing' },\n            { label: '放大晃动缩小', value: 'tada' },\n            { label: '扇形摇摆', value: 'wobble' },\n            { label: '左右上下晃动', value: 'jello' },\n            { label: 'Y轴旋转', value: 'flip' },\n        ],\n    },\n    {\n        label: '退出',\n        children: [\n            { label: '渐隐', value: 'fadeOut' },\n            { label: '向左退出', value: 'fadeOutLeft' },\n            { label: '向右退出', value: 'fadeOutRight' },\n            { label: '向上退出', value: 'fadeOutUp' },\n            { label: '向下退出', value: 'fadeOutDown' },\n            { label: '向左长距退出', value: 'fadeOutLeftBig' },\n            { label: '向右长距退出', value: 'fadeOutRightBig' },\n            { label: '向上长距退出', value: 'fadeOutUpBig' },\n            { label: '向下长距退出', value: 'fadeOutDownBig' },\n            { label: '旋转退出', value: 'rotateOut' },\n            { label: '左顺时针旋转', value: 'rotateOutDownLeft' },\n            { label: '右逆时针旋转', value: 'rotateOutDownRight' },\n            { label: '左逆时针旋转', value: 'rotateOutUpLeft' },\n            { label: '右逆时针旋转', value: 'rotateOutUpRight' },\n            { label: '弹出', value: 'bounceOut' },\n            { label: '向左弹出', value: 'bounceOutLeft' },\n            { label: '向右弹出', value: 'bounceOutRight' },\n            { label: '向上弹出', value: 'bounceOutUp' },\n            { label: '向下弹出', value: 'bounceOutDown' },\n            { label: '中心X轴旋转', value: 'flipOutX' },\n            { label: '中心Y轴旋转', value: 'flipOutY' },\n            { label: '左长半径旋转', value: 'rollOut' },\n            { label: '由小变大退出', value: 'zoomOut' },\n            { label: '左变大退出', value: 'zoomOutLeft' },\n            { label: '右变大退出', value: 'zoomOutRight' },\n            { label: '向上变大退出', value: 'zoomOutUp' },\n            { label: '向下变大退出', value: 'zoomOutDown' },\n            { label: '向左滑动收起', value: 'slideOutLeft' },\n            { label: '向右滑动收起', value: 'slideOutRight' },\n            { label: '向上滑动收起', value: 'slideOutUp' },\n            { label: '向下滑动收起', value: 'slideOutDown' },\n        ],\n    },\n]\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br"),a("span",{staticClass:"line-number"},[n._v("60")]),a("br"),a("span",{staticClass:"line-number"},[n._v("61")]),a("br"),a("span",{staticClass:"line-number"},[n._v("62")]),a("br"),a("span",{staticClass:"line-number"},[n._v("63")]),a("br"),a("span",{staticClass:"line-number"},[n._v("64")]),a("br"),a("span",{staticClass:"line-number"},[n._v("65")]),a("br"),a("span",{staticClass:"line-number"},[n._v("66")]),a("br"),a("span",{staticClass:"line-number"},[n._v("67")]),a("br"),a("span",{staticClass:"line-number"},[n._v("68")]),a("br"),a("span",{staticClass:"line-number"},[n._v("69")]),a("br"),a("span",{staticClass:"line-number"},[n._v("70")]),a("br"),a("span",{staticClass:"line-number"},[n._v("71")]),a("br"),a("span",{staticClass:"line-number"},[n._v("72")]),a("br"),a("span",{staticClass:"line-number"},[n._v("73")]),a("br"),a("span",{staticClass:"line-number"},[n._v("74")]),a("br"),a("span",{staticClass:"line-number"},[n._v("75")]),a("br"),a("span",{staticClass:"line-number"},[n._v("76")]),a("br"),a("span",{staticClass:"line-number"},[n._v("77")]),a("br"),a("span",{staticClass:"line-number"},[n._v("78")]),a("br"),a("span",{staticClass:"line-number"},[n._v("79")]),a("br"),a("span",{staticClass:"line-number"},[n._v("80")]),a("br"),a("span",{staticClass:"line-number"},[n._v("81")]),a("br"),a("span",{staticClass:"line-number"},[n._v("82")]),a("br"),a("span",{staticClass:"line-number"},[n._v("83")]),a("br"),a("span",{staticClass:"line-number"},[n._v("84")]),a("br"),a("span",{staticClass:"line-number"},[n._v("85")]),a("br"),a("span",{staticClass:"line-number"},[n._v("86")]),a("br"),a("span",{staticClass:"line-number"},[n._v("87")]),a("br"),a("span",{staticClass:"line-number"},[n._v("88")]),a("br"),a("span",{staticClass:"line-number"},[n._v("89")]),a("br"),a("span",{staticClass:"line-number"},[n._v("90")]),a("br"),a("span",{staticClass:"line-number"},[n._v("91")]),a("br"),a("span",{staticClass:"line-number"},[n._v("92")]),a("br"),a("span",{staticClass:"line-number"},[n._v("93")]),a("br"),a("span",{staticClass:"line-number"},[n._v("94")]),a("br"),a("span",{staticClass:"line-number"},[n._v("95")]),a("br"),a("span",{staticClass:"line-number"},[n._v("96")]),a("br"),a("span",{staticClass:"line-number"},[n._v("97")]),a("br"),a("span",{staticClass:"line-number"},[n._v("98")]),a("br")])]),a("p",[n._v("复制代码\n然后用 v-for 指令渲染出来动画列表。")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('\n添加动画\n<el-tabs v-model="animationActiveName">\n    <el-tab-pane v-for="item in animationClassData" :key="item.label" :label="item.label" :name="item.label">\n        <el-scrollbar>\n            <div\n               \n                v-for="(animate, index) in item.children"\n                :key="index"\n                @mouseover="hoverPreviewAnimate = animate.value"\n                @click="addAnimation(animate)"\n            >\n                <div :class="[hoverPreviewAnimate === animate.value && animate.value + \' animated\']">\n                    {{ animate.label }}\n                </div>\n            </div>\n        </el-scrollbar>\n    </el-tab-pane>\n</el-tabs>\n复制代码\n点击动画将调用 addAnimation(animate) 将动画添加到组件的 animations 数组。\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br")])]),a("p",[n._v("触发动画\n运行动画的代码：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("export default async function runAnimation($el, animations = []) {\n    const play = (animation) => new Promise(resolve => {\n        $el.classList.add(animation.value, 'animated')\n        const removeAnimation = () => {\n            $el.removeEventListener('animationend', removeAnimation)\n            $el.removeEventListener('animationcancel', removeAnimation)\n            $el.classList.remove(animation.value, 'animated')\n            resolve()\n        }\n            \n        $el.addEventListener('animationend', removeAnimation)\n        $el.addEventListener('animationcancel', removeAnimation)\n    })\n\n    for (let i = 0, len = animations.length; i < len; i++) {\n        await play(animations[i])\n    }\n}\n复制代码\n运行动画需要两个参数：组件对应的 DOM 元素（在组件使用 this.$el 获取）和它的动画数据 animations。并且需要监听 animationend 事件和 animationcancel 事件：一个是动画结束时触发，一个是动画意外终止时触发。\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br")])]),a("p",[n._v("利用这一点再配合 Promise 一起使用，就可以逐个运行组件的每个动画了。")]),n._v(" "),a("ol",{attrs:{start:"12"}},[a("li",[n._v("导入 PSD\n由于时间关系，这个功能我还没做。现在简单的描述一下怎么做这个功能。那就是使用 psd.js 库，它可以解析 PSD 文件。")])]),n._v(" "),a("p",[n._v("使用 psd 库解析 PSD 文件得出的数据如下：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("{ children: \n   [ { type: 'group',\n       visible: false,\n       opacity: 1,\n       blendingMode: 'normal',\n       name: 'Version D',\n       left: 0,\n       right: 900,\n       top: 0,\n       bottom: 600,\n       height: 600,\n       width: 900,\n       children: \n        [ { type: 'layer',\n            visible: true,\n            opacity: 1,\n            blendingMode: 'normal',\n            name: 'Make a change and save.',\n            left: 275,\n            right: 636,\n            top: 435,\n            bottom: 466,\n            height: 31,\n            width: 361,\n            mask: {},\n            text: \n             { value: 'Make a change and save.',\n               font: \n                { name: 'HelveticaNeue-Light',\n                  sizes: [ 33 ],\n                  colors: [ [ 85, 96, 110, 255 ] ],\n                  alignment: [ 'center' ] },\n               left: 0,\n               top: 0,\n               right: 0,\n               bottom: 0,\n               transform: { xx: 1, xy: 0, yx: 0, yy: 1, tx: 456, ty: 459 } },\n            image: {} } ] } ],\n    document: \n       { width: 900,\n         height: 600,\n         resources: \n          { layerComps: \n             [ { id: 692243163, name: 'Version A', capturedInfo: 1 },\n               { id: 725235304, name: 'Version B', capturedInfo: 1 },\n               { id: 730932877, name: 'Version C', capturedInfo: 1 } ],\n            guides: [],\n            slices: [] } } }\n复制代码\n从以上代码可以发现，这些数据和 css 非常像。根据这一点，只需要写一个转换函数，将这些数据转换成我们组件所需的数据，就能实现 PSD 文件转成渲染组件的功能。目前 quark-h5 和 luban-h5 都是这样实现的 PSD 转换功能。\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br")])]),a("ol",{attrs:{start:"13"}},[a("li",[n._v("手机模式\n由于画布是可以调整大小的，我们可以使用 iphone6 的分辨率来开发手机页面。")])]),n._v(" "),a("p",[n._v("这样开发出来的页面也可以在手机下正常浏览，但可能会有样式偏差。因为我自定义的三个组件是没有做适配的，如果你需要开发手机页面，那自定义组件必须使用移动端的 UI 组件库。或者自己开发移动端专用的自定义组件。")]),n._v(" "),a("p",[n._v("总结\n由于 DEMO 的代码比较多，所以在讲解每一个功能点时，我只把关键代码贴上来。所以大家会发现 DEMO 的源码和我贴上来的代码会有些区别，请不必在意。")]),n._v(" "),a("p",[n._v("另外，DEMO 的样式也比较简陋，主要是最近事情比较多，没太多时间写好看点，请见谅。")]),n._v(" "),a("p",[n._v("参考资料\nref-line\nquark-h5\nluban-h5\n易企秀\ndrag 事件\n全文完")])])}),[],!1,null,null,null);s.default=t.exports}}]);